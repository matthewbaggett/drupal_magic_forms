<?php

// Base libs
require_once("lib/json.inc");
require_once("lib/magic_form.inc");

// Field Primitives
require_once("fields/magic_form_item.inc");
require_once("fields/magic_form_field.inc");
require_once("fields/magic_form_field_multi.inc");

// Field Components
require_once("fields/magic_form_field_button.inc");
require_once("fields/magic_form_field_checkbox.inc");
require_once("fields/magic_form_field_checkbox_multi.inc");
require_once("fields/magic_form_field_datatable.inc");
require_once("fields/magic_form_field_file.inc");
require_once("fields/magic_form_field_radio.inc");
require_once("fields/magic_form_field_range.inc");
require_once("fields/magic_form_field_select.inc");
require_once("fields/magic_form_field_spinedit.inc");
require_once("fields/magic_form_field_submit.inc");
require_once("fields/magic_form_field_switch.inc");
require_once("fields/magic_form_field_switch_multi.inc");
require_once("fields/magic_form_field_text.inc");
require_once("fields/magic_form_field_textarea.inc");

// Depend on magic_form_field_text being loaded already
require_once("fields/magic_form_field_date.inc");
require_once("fields/magic_form_field_hidden.inc");
require_once("fields/magic_form_field_number.inc");

// Groups support
require_once("fields/magic_form_group.inc");

// Magic Clojure.
require_once("lib/magic_serialisable_clojure.inc");

// Implementation for form-able objects.
require_once("lib/magic_form_support.inc");

// Validators
require_once("validators/magic_form_validator_interface.inc");
require_once("validators/magic_form_validator.inc");
require_once("validators/magic_form_validator_is_email.inc");
require_once("validators/magic_form_validator_is_length_more_than.inc");
require_once("validators/magic_form_validator_is_length_less_than.inc");
require_once("validators/magic_form_validator_is_length_more_than_or_equal.inc");
require_once("validators/magic_form_validator_is_length_less_than_or_equal.inc");
require_once("validators/magic_form_validator_is_not_empty.inc");
require_once("validators/magic_form_validator_is_not_null.inc");
require_once("validators/magic_form_validator_is_null.inc");
require_once("validators/magic_form_validator_is_numeric_more_than.inc");
require_once("validators/magic_form_validator_is_numeric_less_than.inc");
require_once("validators/magic_form_validator_is_valid_phonenumber.inc");
require_once("validators/magic_form_validator_is_null_or_numeric_less_than.inc");
require_once("validators/magic_form_validator_is_null_or_numeric_more_than.inc");

// Forms default settings
if (!defined('MAGIC_FORMS_MAX_ACTIVE_FORMS')) define("MAGIC_FORMS_MAX_ACTIVE_FORMS", 100);
if (!defined('MAGIC_FORMS_DEBUG')) define("MAGIC_FORMS_DEBUG", FALSE);
if (!defined('MAGIC_FORMS_SERIALISED_MAX_BYTES')) define("MAGIC_FORMS_SERIALISED_MAX_BYTES", 5000000); // 500KB

/**
 * Initialisation
 * Do not remove hook_page_alter(), its used to detect magic_forms installation presence & do the magic that makes
 * magic_forms magical.
 */
//function magic_forms_page_alter()
function magic_forms_init() {
  if (isset($_REQUEST['magic_form_id'])) {
    magic_form::process($_REQUEST['magic_form_id']);
  }
  magic_form::cleanup_expired_forms();
}

/**
 * Crunch through a view
 *
 * @param string $file File of the template to call.
 * @param array|object $view Optional view array.
 *
 * @return string
 */
function magic_forms_template_view($file, $view = null, $templates_directory = 'templates') {
  $file = DRUPAL_ROOT . "/" . drupal_get_path('module', 'magic_forms') . '/' . $templates_directory . '/' . $file;
  if (!file_exists($file)) {
    return "Cannot find {$file}";
  }
  extract((array)$view);
  ob_start();
  require($file);
  $markup = ob_get_contents();
  ob_end_clean();
  return $markup;
}

/**
 * CSS class mangler
 * Mangle a string like "Layout Magic Doodah" to "layout-magic-doodah" for use as a CSS class
 *
 * @param string $text text string to mangle
 *
 * @return string css class
 */
function magic_forms_mangle_to_css_class($text) {
  $text = str_replace(" ", "-", $text);
  $text = preg_replace("/[^a-zA-Z0-9-_]+/", "", $text);
  $text = strtolower($text);
  return $text;
}

function magic_forms_permission() {
  $perms = array(
    'Show Magic Forms Examples' => array(
      'title' => t("Show Magic Form Examples"),
    )
  );
  return $perms;
}

function magic_forms_menu() {
  $items['examples/magic-form'] = array(
    'page callback' => 'magic_form_examples',
    'access callback' => 'user_access',
    'access arguments' => array("Show Magic Forms Examples"),
    'file' => 'examples.inc',
  );
  return $items;
}

;